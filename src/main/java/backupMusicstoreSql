create schema onlinemusicstore;

create table onlinemusicstore.category(
    id int auto_increment,
    name varchar(50) not null,
    description varchar(255) not null,
    image_url varchar(50) not null,
    is_active boolean not null,
    CONSTRAINT category_id PRIMARY KEY (id)

);

create table onlinemusicstore.user_detail(
    id int auto_increment,
    first_name varchar(50) not null,
    last_name varchar(50) not null,
    role varchar(50) not null,
    enabled boolean not null,
    password varchar(60) not null,
    email varchar(100) not null,
    contact_number varchar(20) not null,
    CONSTRAINT user_id PRIMARY KEY (id)
);

create table onlinemusicstore.product(
  id int auto_increment,
  code varchar(20) not null,
  name varchar(50) not null,
  brand varchar(50) not null,
  description varchar(255) not null,
  unit_price decimal(10,2),
  quantity int,
  is_active boolean,
  category_id int,
  supplier_id int,
  purchase int default 0,
  views int default 0,
  CONSTRAINT product_id PRIMARY KEY (id),
  CONSTRAINT product_category_id FOREIGN KEY (category_id) REFERENCES category (id),
  CONSTRAINT product_supplier_id FOREIGN KEY (supplier_id) REFERENCES user_detail (id)
);

-- the address table to store the user billing and shipping addresses;
create table onlinemusicstore.address(
    id int auto_increment,
    user_id int,
    address_line_one varchar(100),
    address_line_two varchar(100),
    city varchar(20),
    state varchar(20),
    country varchar(20),
    postal_code varchar(10),
    is_billing boolean,
    is_shipping boolean,
    CONSTRAINT address_user_id FOREIGN KEY (user_id) REFERENCES user_detail(id),
    CONSTRAINT address_id PRIMARY KEY (id)
);

-- the cart table to store the user cart top-level details;
create table onlinemusicstore.cart(
    id int auto_increment,
    user_id int,
    grand_total decimal(10,2),
    cart_lines int,
    CONSTRAINT cart_user_id FOREIGN KEY (user_id) REFERENCES user_detail (id),
    CONSTRAINT cart_id PRIMARY KEY (id)
);

-- the cart line table to store the cart details;
create table onlinemusicstore.cart_line(
    id int auto_increment,
    cart_id int,
    total decimal(10,2),
    product_id int,
    product_count int,
    buying_price decimal(10,2),
    is_available boolean,
    CONSTRAINT cartline_product_id FOREIGN KEY (product_id) REFERENCES product (id),
    CONSTRAINT cartline_id PRIMARY KEY (id)
);

-- the order detail table to store the order;
create table onlinemusicstore.order_detail(
  id int auto_increment,
  user_id int,
  order_total decimal(10,2),
  order_count int,
  shipping_id int,
  billing_id int,
  order_date date,
  CONSTRAINT order_detail_user_id FOREIGN KEY (user_id) REFERENCES user_detail(id),
  CONSTRAINT order_detail_shipping_id FOREIGN KEY (shipping_id) REFERENCES address(id),
  CONSTRAINT order_detail_billing_id FOREIGN KEY (billing_id) REFERENCES address(id),
  CONSTRAINT order_detail_id PRIMARY KEY (id)
);

-- the order item table to store order items;
create table onlinemusicstore.order_item(
    id int auto_increment,
    order_id int,
    total decimal(10,2),
    product_id int,
    product_count int,
    buying_price decimal(10,2),
    CONSTRAINT order_item_product_id FOREIGN KEY (product_id) REFERENCES product(id),
    CONSTRAINT order_item_order_id FOREIGN KEY (order_id) REFERENCES order_detail(id),
    CONSTRAINT order_item_id PRIMARY KEY (id)
);

-- adding three categories
INSERT INTO onlinemusicstore.category(name, description, image_url, is_active) VALUES ('Musical Instruments', 'This is a description for Musical Instruments category','musical1.png',true);
INSERT INTO onlinemusicstore.category(name, description, image_url, is_active) VALUES ('Cases', 'This is a description for Cases','musical2.png',true);
INSERT INTO onlinemusicstore.category(name, description, image_url, is_active) VALUES ('Cables & Connectors', 'This is a description for cables and connectors','musical3.jpg',true);

-- adding three users
INSERT INTO onlinemusicstore.user_detail(first_name, last_name, role, enabled, password, email, contact_number) VALUES ('Alexandru','G','ADMIN',true,'12345','ag@gmail.com','0742064246');
INSERT INTO onlinemusicstore.user_detail(first_name, last_name, role, enabled, password, email, contact_number) VALUES ('Mihai','T','SUPPLIER',true,'23456','mt@gmail.com','1111111111');
INSERT INTO onlinemusicstore.user_detail(first_name, last_name, role, enabled, password, email, contact_number) VALUES ('George','M','SUPPLIER',true,'23456','gm@gmail.com','2222222222');
INSERT INTO onlinemusicstore.user_detail(first_name, last_name, role, enabled, password, email, contact_number) VALUES ('Laurentiu','A','USER',true,'23456','la@gmail.com','3333333333');

-- adding five products
INSERT INTO onlinemusicstore.product(code, name, brand, description, unit_price, quantity, is_active, category_id, supplier_id) VALUES ('GIB23','Les Paul Classic','Gibson','Best guitar available right now!',1999,5,true,1,2);
INSERT INTO onlinemusicstore.product(code, name, brand, description, unit_price, quantity, is_active, category_id, supplier_id) VALUES ('Epi23','Les Paul Express','Epiphone','Best guitar available right now!',800,5,true,1,3);
INSERT INTO onlinemusicstore.product(code, name, brand, description, unit_price, quantity, is_active, category_id, supplier_id) VALUES ('Tak23','Taka Classic','Takamine','Best case available right now!',300,7,true,2,2);
INSERT INTO onlinemusicstore.product(code, name, brand, description, unit_price, quantity, is_active, category_id, supplier_id) VALUES ('Vox23','Vox Classic','Vox','Best cable available right now!',20,10,true,3,3);
INSERT INTO onlinemusicstore.product(code, name, brand, description, unit_price, quantity, is_active, category_id, supplier_id) VALUES ('Fen23','Fender Classic','Fender','Best cable available right now!',30,8,true,3,3);

-- adding a supplier correspondece address
INSERT INTO onlinemusicstore.address(user_id, address_line_one, address_line_two, city, state, country, postal_code, is_billing, is_shipping) VALUES (4,'2A Zamfir Olaru','Intrarea','Bucharest','Bucharest','Romania','052076',true,false);

-- adding a cart for testing
INSERT INTO onlinemusicstore.cart(user_id, grand_total, cart_lines) VALUES (4,0,0);